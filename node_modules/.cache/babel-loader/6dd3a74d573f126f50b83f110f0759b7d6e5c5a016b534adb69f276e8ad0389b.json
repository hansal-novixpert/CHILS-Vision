{"ast":null,"code":"import React,{useState}from'react';import{Table,Input,Button,message}from'antd';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GetManagersTable=()=>{const[warehouseId,setWarehouseId]=useState('');const[managers,setManagers]=useState([]);const[loading,setLoading]=useState(false);const handleInputChange=e=>{setWarehouseId(e.target.value);};const handleGetManagersClick=async()=>{if(!warehouseId){message.error('Please enter a Warehouse ID');return;}const apiKey='kUkEQymXgA2TqsS8mpDe84isJ8fiT2u94TT42Qeo';// Replace with your actual API key\nconst apiEndpoint=\"https://4xh7x0lhy4.execute-api.us-east-1.amazonaws.com/prod/notify/\".concat(warehouseId);setLoading(true);try{const response=await axios.get(apiEndpoint,{headers:{'x-api-key':\"\".concat(apiKey)}});if(response.status===200){message.success('Managers fetched successfully!');console.log(response.data);// Check API response in console\n// Transform the data\nconst transformedData=response.data.map(manager=>({manager_id:manager.manager_id.S,user_id:manager.user_id.S}));setManagers(transformedData);}else{message.error('Failed to fetch managers.');}}catch(error){console.error('API call error:',error);message.error('An error occurred while fetching managers.');}finally{setLoading(false);}};const columns=[{title:'Manager ID',dataIndex:'manager_id',key:'manager_id'},{title:'User ID',dataIndex:'user_id',key:'user_id'}];return/*#__PURE__*/_jsxs(\"div\",{style:{padding:24,background:'#fff'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',marginBottom:16},children:[/*#__PURE__*/_jsx(Input,{placeholder:\"Enter Warehouse ID\",value:warehouseId,onChange:handleInputChange,style:{marginRight:8,width:'200px'}}),/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:handleGetManagersClick,loading:loading,children:\"Get Managers\"})]}),/*#__PURE__*/_jsx(Table,{columns:columns,dataSource:managers,loading:loading,rowKey:\"manager_id\"// Assuming manager_id is unique for each row\n})]});};export default GetManagersTable;","map":{"version":3,"names":["React","useState","Table","Input","Button","message","axios","jsx","_jsx","jsxs","_jsxs","GetManagersTable","warehouseId","setWarehouseId","managers","setManagers","loading","setLoading","handleInputChange","e","target","value","handleGetManagersClick","error","apiKey","apiEndpoint","concat","response","get","headers","status","success","console","log","data","transformedData","map","manager","manager_id","S","user_id","columns","title","dataIndex","key","style","padding","background","children","display","marginBottom","placeholder","onChange","marginRight","width","type","onClick","dataSource","rowKey"],"sources":["/home/hansal/Documents/CHILS/CHILS-interface/CHILS/src/components/GetManagersTable.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Table, Input, Button, message } from 'antd';\nimport axios from 'axios';\n\nconst GetManagersTable = () => {\n  const [warehouseId, setWarehouseId] = useState('');\n  const [managers, setManagers] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const handleInputChange = (e) => {\n    setWarehouseId(e.target.value);\n  };\n\n  const handleGetManagersClick = async () => {\n    if (!warehouseId) {\n      message.error('Please enter a Warehouse ID');\n      return;\n    }\n\n    const apiKey = 'kUkEQymXgA2TqsS8mpDe84isJ8fiT2u94TT42Qeo'; // Replace with your actual API key\n    const apiEndpoint = `https://4xh7x0lhy4.execute-api.us-east-1.amazonaws.com/prod/notify/${warehouseId}`;\n\n    setLoading(true);\n\n    try {\n      const response = await axios.get(apiEndpoint, {\n        headers: {\n          'x-api-key': `${apiKey}`,\n        },\n      });\n\n      if (response.status === 200) {\n        message.success('Managers fetched successfully!');\n        console.log(response.data); // Check API response in console\n        // Transform the data\n        const transformedData = response.data.map(manager => ({\n          manager_id: manager.manager_id.S,\n          user_id: manager.user_id.S,\n        }));\n        setManagers(transformedData);\n      } else {\n        message.error('Failed to fetch managers.');\n      }\n    } catch (error) {\n      console.error('API call error:', error);\n      message.error('An error occurred while fetching managers.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const columns = [\n    {\n      title: 'Manager ID',\n      dataIndex: 'manager_id',\n      key: 'manager_id',\n    },\n    {\n      title: 'User ID',\n      dataIndex: 'user_id',\n      key: 'user_id',\n    },\n  ];\n\n  return (\n    <div style={{ padding: 24, background: '#fff' }}>\n      <div style={{ display: 'flex', marginBottom: 16 }}>\n        <Input\n          placeholder=\"Enter Warehouse ID\"\n          value={warehouseId}\n          onChange={handleInputChange}\n          style={{ marginRight: 8, width: '200px' }}\n        />\n        <Button type=\"primary\" onClick={handleGetManagersClick} loading={loading}>\n          Get Managers\n        </Button>\n      </div>\n      <Table\n        columns={columns}\n        dataSource={managers}\n        loading={loading}\n        rowKey=\"manager_id\" // Assuming manager_id is unique for each row\n      />\n    </div>\n  );\n};\n\nexport default GetManagersTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}